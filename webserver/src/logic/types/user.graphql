
type User {
  _id: ID!
  fullName: String
  provider: String
  profile: JSON
  avatar: Image
  # facebook: String
  # google: String
  #avatar(size: PhotoSize): Image
}

type Me {
  _id: ID!
  fullName: String
  email: String
  provider: String
  profile: JSON
  facebook: String
  google: String
  likeStory: [ID]
  archiveStory: [ID]
  avatar: Image
  # likedStory:[Story]
  # archivedStory:[Story]
  #avatar(size: PhotoSize): Image
}


type Query {
  me: Me
  user(_id: ID!): User
  #storyList(type: $type, offset: $offset, limit: Int = 10) [Story]
}

type Mutation {
  registerUser(input: registerUserInput!): User
  localLogin(input: localLoginInput!): LocalLoginPayload
  logout(fullName: String): LogoutPayload
  #updateAvatar
  #googleLogin(input: googleLoginInput!): User
}

type LogoutPayload{
  success: Boolean
}

input registerUserInput {
  fullName: String
  email: String
  password: String
}

input localLoginInput {
  email: String
  password: String
}

type LocalLoginPayload {
  me: Me
}
